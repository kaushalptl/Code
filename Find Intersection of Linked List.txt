class Solution {
public:
    int getLength(ListNode* root){
        
        ListNode *temp = root;
        
        int count = 0;
        while(temp != NULL){
            count++;
            temp = temp ->next;
        }   
        
        return count;
    }
    ListNode* getIntersection(ListNode* root1, ListNode* root2, int diff){
        
        ListNode* temp1 = root1;
        ListNode* temp2 = root2;
        
        for(int i=0; i<diff; i++)
            temp1 = temp1 -> next;
        
        while(temp1 != NULL && temp2 != NULL){
            
            if(temp1 == temp2)
                return temp1;
            
            temp1 = temp1 -> next;
            temp2 = temp2 -> next;
            
        }
        
        return NULL;
         
    }
    
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        if(headA == NULL || headB == NULL)
            return NULL;
        
        int l1 = getLength(headA);
        int l2 = getLength(headB);
        
        int diff = abs(l1-l2);
        
        if(l1 > l2)
            return getIntersection(headA, headB, diff);
        
        else
            return getIntersection(headB, headA, diff);
        
    }
    
};